{
  "stats": {
    "suites": 4,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-14T07:40:02.811Z",
    "end": "2022-08-14T07:40:03.143Z",
    "duration": 332,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0d3a88d5-a795-4b7a-9711-9737f0f7e6bb",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 62,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newuser = await createUser();",
          "err": {},
          "uuid": "075ccdf8-550f-4603-9a93-83a9090b4e04",
          "parentUUID": "0d3a88d5-a795-4b7a-9711-9737f0f7e6bb",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 11,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newuser = await createUser();",
          "err": {},
          "uuid": "14042ba1-b479-4351-a67f-89e08bd306f8",
          "parentUUID": "0d3a88d5-a795-4b7a-9711-9737f0f7e6bb",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 7,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newuser = await createUser();",
          "err": {},
          "uuid": "8a764a6e-dd25-40ba-bcaa-3575baf7dbe1",
          "parentUUID": "0d3a88d5-a795-4b7a-9711-9737f0f7e6bb",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c1fefb9b-3c6d-412b-9ecd-6388060b6364",
          "title": "Create New User",
          "fullFile": "G:\\Node JS API Unit-Testing using Mocha-Chai\\Mocha Chai Unit Testing-Node JS API\\test\\create_user.js",
          "file": "\\test\\create_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User Correctly Created",
              "fullTitle": "Create New User User Correctly Created",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  name: \"Jon Doe\",\n  email: \"doe@gmail.com\",\n  age: 21,\n};\nconst response = await axios.post(API_URL + \"/postuserinfo\", payload);\nexpect(response.status).to.be.equal(201);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "1d90dc67-db7a-49a7-a5e2-3264978c7916",
              "parentUUID": "c1fefb9b-3c6d-412b-9ecd-6388060b6364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Correctly Created Without Adding User Name",
              "fullTitle": "Create New User User Correctly Created Without Adding User Name",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    email: \"doe@gmail.com\",\n    age: 21,\n  };\n  const response = await axios.post(API_URL + \"/postuserinfo\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "ba1eaf3e-8b99-4335-8316-fb4ad010457a",
              "parentUUID": "c1fefb9b-3c6d-412b-9ecd-6388060b6364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Correctly Created Without Adding User E-mail",
              "fullTitle": "Create New User User Correctly Created Without Adding User E-mail",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    name: \"Jon Doe\",\n    age: 21,\n  };\n  const response = await axios.post(API_URL + \"/postuserinfo\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "c8d6de05-877e-4bef-ab22-553e23406744",
              "parentUUID": "c1fefb9b-3c6d-412b-9ecd-6388060b6364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Correctly Created Without Adding User Age",
              "fullTitle": "Create New User User Correctly Created Without Adding User Age",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    name: \"Jon Doe\",\n    email: \"doe@gmail.com\",\n  };\n  const response = await axios.post(API_URL + \"/postuserinfo\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "7fcc67f5-456a-429b-aae8-451c78c37ebb",
              "parentUUID": "c1fefb9b-3c6d-412b-9ecd-6388060b6364",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d90dc67-db7a-49a7-a5e2-3264978c7916",
            "ba1eaf3e-8b99-4335-8316-fb4ad010457a",
            "c8d6de05-877e-4bef-ab22-553e23406744",
            "7fcc67f5-456a-429b-aae8-451c78c37ebb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "20fb4a76-3dce-4542-9894-8a561370a7cd",
          "title": "Delete User From Database",
          "fullFile": "G:\\Node JS API Unit-Testing using Mocha-Chai\\Mocha Chai Unit Testing-Node JS API\\test\\delete_user.js",
          "file": "\\test\\delete_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete Single User",
              "fullTitle": "Delete User From Database Delete Single User",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete(API_URL + \"/deleteuser/\" + newuser._id);\n    expect(response.status).to.be.equal(200);\n    expect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "a8ce8a53-8bcc-4fa6-893e-80e9d48259e2",
              "parentUUID": "20fb4a76-3dce-4542-9894-8a561370a7cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8ce8a53-8bcc-4fa6-893e-80e9d48259e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "791e2876-0946-44e8-afc8-99fdcb302127",
          "title": "Get User Info",
          "fullFile": "G:\\Node JS API Unit-Testing using Mocha-Chai\\Mocha Chai Unit Testing-Node JS API\\test\\get_user.js",
          "file": "\\test\\get_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get All User Lists",
              "fullTitle": "Get User Info Get All User Lists",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/getuserinfo\");\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"array\");",
              "err": {},
              "uuid": "2573b5a0-3b1f-40b8-8473-934f6b85e8a5",
              "parentUUID": "791e2876-0946-44e8-afc8-99fdcb302127",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Single User",
              "fullTitle": "Get User Info Get Single User",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/singleuser/\" + newuser._id);\n    expect(response.status).to.be.equal(200);\n    expect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "d02f5c3f-5ae4-4fb1-bace-85c7ca2a127b",
              "parentUUID": "791e2876-0946-44e8-afc8-99fdcb302127",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have all the property for each user",
              "fullTitle": "Get User Info Should have all the property for each user",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/singleuser/\" + newuser._id);\nexpect(response.data.email).to.be.equal(\"js@gmail.com\");\nresponse.data.should.have.property(\"name\");\nresponse.data.should.have.property(\"email\");\nresponse.data.should.have.property(\"age\");\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "83ad9aa7-deb1-4fc3-85fd-e20819ea822b",
              "parentUUID": "791e2876-0946-44e8-afc8-99fdcb302127",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2573b5a0-3b1f-40b8-8473-934f6b85e8a5",
            "d02f5c3f-5ae4-4fb1-bace-85c7ca2a127b",
            "83ad9aa7-deb1-4fc3-85fd-e20819ea822b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "96bad9de-6861-431a-b4e4-649d7f87c456",
          "title": "Update User Information",
          "fullFile": "G:\\Node JS API Unit-Testing using Mocha-Chai\\Mocha Chai Unit Testing-Node JS API\\test\\update_user.js",
          "file": "\\test\\update_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update Single User All The Information Together",
              "fullTitle": "Update User Information Update Single User All The Information Together",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  name: \"Jon Doe to new user Becham\",\n  email: \"doe@gmail.com\",\n  age: 21,\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "6cfb4b40-37e2-4aae-a53b-ba9e6f57b766",
              "parentUUID": "96bad9de-6861-431a-b4e4-649d7f87c456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Name",
              "fullTitle": "Update User Information Update Single User Name",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  name: \"Jon Doe to new user Michle\",\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "3559ea2f-c79c-4858-bfdf-2e9aaf23953d",
              "parentUUID": "96bad9de-6861-431a-b4e4-649d7f87c456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User E-mail",
              "fullTitle": "Update User Information Update Single User E-mail",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  email: \"jondoe@gmail.com\",\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "12526874-1246-4c8c-9ce3-9373fe7350ec",
              "parentUUID": "96bad9de-6861-431a-b4e4-649d7f87c456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Age",
              "fullTitle": "Update User Information Update Single User Age",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  age: 29,\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "2ff96af3-5f07-431b-bfd1-3a4ecc796fa3",
              "parentUUID": "96bad9de-6861-431a-b4e4-649d7f87c456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User With Wrong User ID",
              "fullTitle": "Update User Information Update Single User With Wrong User ID",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    name: \"Jon Doe to new user Jesica\",\n    email: \"doe@gmail.com\",\n    age: 21,\n  };\n  const response = await axios.put(\n    API_URL + \"/updateuser/\" + 8989899,\n    payload\n  );\n  expect(response.status).not.to.be.equal(200);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(200);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "1067ff6b-5d8f-4cd0-b413-c75ebe632f28",
              "parentUUID": "96bad9de-6861-431a-b4e4-649d7f87c456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Information With New E-mail",
              "fullTitle": "Update User Information Update Single User Information With New E-mail",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  email: \"d@gmail.com\",\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data.email).not.to.be.equal(\"d@gmail.com\");\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "16a5b36e-e236-470c-a895-55be2a774a7e",
              "parentUUID": "96bad9de-6861-431a-b4e4-649d7f87c456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Information With New Age",
              "fullTitle": "Update User Information Update Single User Information With New Age",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  age: 29,\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data.age).not.to.be.equal(28);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "a87f973b-f5c0-4540-8fe1-dd96b4f9f097",
              "parentUUID": "96bad9de-6861-431a-b4e4-649d7f87c456",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6cfb4b40-37e2-4aae-a53b-ba9e6f57b766",
            "3559ea2f-c79c-4858-bfdf-2e9aaf23953d",
            "12526874-1246-4c8c-9ce3-9373fe7350ec",
            "2ff96af3-5f07-431b-bfd1-3a4ecc796fa3",
            "1067ff6b-5d8f-4cd0-b413-c75ebe632f28",
            "16a5b36e-e236-470c-a895-55be2a774a7e",
            "a87f973b-f5c0-4540-8fe1-dd96b4f9f097"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 74,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}